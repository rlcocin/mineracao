/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package gui;

import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JOptionPane;

import org.apache.lucene.document.Document;
import org.apache.lucene.index.DirectoryReader;
import org.apache.lucene.index.IndexReader;
import org.apache.lucene.queryparser.classic.ParseException;
import org.apache.lucene.queryparser.classic.QueryParser;
import org.apache.lucene.search.IndexSearcher;
import org.apache.lucene.search.Query;
import org.apache.lucene.search.ScoreDoc;
import org.apache.lucene.search.TopScoreDocCollector;
import org.apache.lucene.store.FSDirectory;
import org.apache.lucene.util.Version;


/**
 *
 * @author Luiz
 */
public class Teste extends javax.swing.JFrame {

	/**
	 * Creates new form Teste
	 */

	private IndexText indexer;

	IndexEnum index_location;

	int index_type = 1;

	String docsLocation = "file";

	public Teste() {
		reindexar();
		initComponents();
		jTextArea1.setEditable(false);
		this.setVisible(true);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		campoBusca = new javax.swing.JTextField();
		jLabel1 = new javax.swing.JLabel();
		jScrollPane1 = new javax.swing.JScrollPane();
		jTextArea1 = new javax.swing.JTextArea();
		jButton1 = new javax.swing.JButton();
		jLabel2 = new javax.swing.JLabel();
		jLabel3 = new javax.swing.JLabel();
		jButton2 = new javax.swing.JButton();
		jCheckBox1 = new javax.swing.JCheckBox();
		jCheckBox2 = new javax.swing.JCheckBox();
		jSeparator1 = new javax.swing.JSeparator();
		jButton3 = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		campoBusca.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				campoBuscaActionPerformed(evt);
			}
		});

		jLabel1.setText("Digite aqui a sua busca:");

		jTextArea1.setColumns(20);
		jTextArea1.setRows(5);
		jScrollPane1.setViewportView(jTextArea1);

		jButton1.setText("Buscar");
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});

		jLabel2.setText("Resultados da busca:");

		jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/marra.png"))); // NOI18N
		jLabel3.setText("jLabel3");

		jButton2.setText("Reindexar");
		jButton2.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton2ActionPerformed(evt);
			}
		});

		jCheckBox1.setLabel("Habilitar Stopwords");

		jCheckBox2.setLabel("Habilitar Stemming");
		jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jCheckBox2ActionPerformed(evt);
			}
		});

		jButton3.setText("Sair");

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
								.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
										.addGap(0, 0, Short.MAX_VALUE)
										.addComponent(jLabel2)
										.addGap(235, 235, 235))
										.addGroup(layout.createSequentialGroup()
												.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
														.addGroup(layout.createSequentialGroup()
																.addGap(135, 135, 135)
																.addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE))
																.addGroup(layout.createSequentialGroup()
																		.addGap(29, 29, 29)
																		.addComponent(jLabel1)
																		.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																				.addGroup(layout.createSequentialGroup()
																						.addComponent(jCheckBox1)
																						.addGap(85, 85, 85)
																						.addComponent(jCheckBox2))
																						.addGroup(layout.createSequentialGroup()
																								.addComponent(campoBusca, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
																								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																								.addComponent(jButton1))))
																								.addGroup(layout.createSequentialGroup()
																										.addContainerGap()
																										.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 578, javax.swing.GroupLayout.PREFERRED_SIZE)))
																										.addGap(0, 0, Short.MAX_VALUE)))
																										.addContainerGap())
																										.addGroup(layout.createSequentialGroup()
																												.addGap(183, 183, 183)
																												.addComponent(jButton2)
																												.addGap(64, 64, 64)
																												.addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
																												.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
				);
		layout.setVerticalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
						.addContainerGap()
						.addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(9, 9, 9)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jLabel1)
								.addComponent(campoBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jButton1))
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(jCheckBox1)
										.addComponent(jCheckBox2))
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
										.addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(1, 1, 1)
										.addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jButton2)
												.addComponent(jButton3))
												.addGap(7, 7, 7))
				);

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void campoBuscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoBuscaActionPerformed
		// TODO add your handling code here:
	}//GEN-LAST:event_campoBuscaActionPerformed

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

		index_location = (jCheckBox1.isSelected() ? 
				(jCheckBox2.isSelected() ? 
						IndexEnum.STOPWORDS_STEMMING_INDEX : 
						IndexEnum.STOPWORDS_INDEX) : 
				(jCheckBox2.isSelected() ? 
						IndexEnum.STEMMING_INDEX : 
						IndexEnum.DEFAULT_INDEX));
		IndexReader reader;
		try {
			reader = DirectoryReader.open(FSDirectory
					.open(new File(index_location.name())));

			IndexSearcher searcher = new IndexSearcher(reader);
			TopScoreDocCollector collector = TopScoreDocCollector.create(100,
					true);
	/*Query q;
			
			if (index_location.name().equals("STOPWORDS_STEMMING_INDEX")) {
				q = new QueryParser(Version.LUCENE_40, "contents",Analyzers.getAnalyzerCompleto()).parse(campoBusca.getText());
			} else if (index_location.name().equals("STOPWORDS_INDEX")) {
				q = new QueryParser(Version.LUCENE_40, "contents",Analyzers.getAnalyzerStopwords()).parse(campoBusca.getText());
			} else if (index_location.name().equals("STEMMING_INDEX")) {
				q = new QueryParser(Version.LUCENE_40, "contents",Analyzers.getAnalyzerStemming()).parse(campoBusca.getText());
			} else {
				q = new QueryParser(Version.LUCENE_40, "contents",Analyzers.getAnalyzer()).parse(campoBusca.getText());
			}*/
			Query q = new QueryParser(Version.LUCENE_40, "contents",index_location.getValor()).parse(campoBusca.getText());
			System.out.println(q.toString());
			searcher.search(q, collector);
			ScoreDoc[] hits = collector.topDocs().scoreDocs;
			
			jTextArea1.setText("");
			System.out.println(hits.length + " resultados encontrados.");
			for (int i = 0; i < hits.length; ++i) {
				int docId = hits[i].doc;
				Document d = searcher.doc(docId);
				
				jTextArea1.append((i + 1) + ". " + d.get("path")
						+ " score=" + hits[i].score + "\n");




			}

			reader.close();

		} catch (IOException ex) {
			Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
		} catch (ParseException ex) {
			Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
		}
	}//GEN-LAST:event_jButton1ActionPerformed

	private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
		// TODO add your handling code here:
		this.reindexar();
	}//GEN-LAST:event_jButton2ActionPerformed

	private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
		// TODO add your handling code here:
	}//GEN-LAST:event_jCheckBox2ActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(Teste.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(Teste.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(Teste.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(Teste.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new Teste().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JTextField campoBusca;
	private javax.swing.JButton jButton1;
	private javax.swing.JButton jButton2;
	private javax.swing.JButton jButton3;
	private javax.swing.JCheckBox jCheckBox1;
	private javax.swing.JCheckBox jCheckBox2;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JSeparator jSeparator1;
	private javax.swing.JTextArea jTextArea1;
	// End of variables declaration//GEN-END:variables

	private void index() {
		for(IndexEnum i : IndexEnum.values()) {

			new File(i.name()).mkdir();

			indexer = null;

			String docsLocation = "file";

			try {

				indexer = new IndexText(i);

				indexer.indexFileOrDirectory(docsLocation);

				indexer.closeIndex();

			} catch (Exception ex) {
				System.out.println("Nao foi possivel criar o indexador..."
						+ ex.getMessage());
				JOptionPane.showMessageDialog(null, "Nao foi possivel criar o indexador!",
						"MarraSearch - Mensagem", 1);
				System.exit(-1);
			}
		}
		JOptionPane.showMessageDialog(null, "Indexacao feita com sucesso!",
				"MarraSearch - Mensagem", 1);
	}

	private void reindexar() {
		for(IndexEnum i : IndexEnum.values()) {
			this.deletarDiretorio(new File(i.name()));
		}
		this.index();
	}

	private void deletarDiretorio(File dir) {
		File[] arqs = dir.listFiles();
		if(arqs!=null) {
			for(File f: arqs) {
				if(f.isDirectory()) {
					deletarDiretorio(f);
				} else {
					f.delete();
				}
			}
		}
		//dir.delete();
	}

}
